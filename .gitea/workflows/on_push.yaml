name: On push
on: [push]
env:
  DOCKER_HOST: tcp://docker-dind.gitlab-managed-apps:2375

jobs:
  build:
    runs-on: docker-27
    steps:
      # Node package is required to run actions.
      - name: Install dependencies
        run: apk add --no-cache bash nodejs
        # Change the shell because bash is used by default,
        # but it's not installed yet on this step.
        shell: sh

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ gitea.server_url }}
          # I failed to use a job token
          # (probably related: https://github.com/go-gitea/gitea/issues/31531).
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Check out the source code
        uses: actions/checkout@v4

      - name: Set up environment variables
        run: |
          # Replace '/' with '-'.
          echo REF_SAFE_NAME=${GITHUB_REF_NAME////-} >> $GITHUB_ENV;
          echo DOMAIN=${GITHUB_SERVER_URL#*://} >> $GITHUB_ENV;          

      - name: Build
        uses: docker/build-push-action@v6
        with:
          # Use already fetched sources.
          context: .
          push: true
          tags: |
            ${{ env.DOMAIN }}/${{ gitea.repository }}:${{ gitea.sha }}
            ${{ env.DOMAIN }}/${{ gitea.repository }}:${{ env.REF_SAFE_NAME }}
          # For more details on customizing build-args, refer to:
          # https://github.com/docker/build-push-action?tab=readme-ov-file#customizing
          build-args: |
            BRANCH_NAME=${{ env.REF_SAFE_NAME }}

  deploy:
    needs: build
    if: |
      contains('
        refs/heads/develop
        refs/heads/main
        refs/heads/staging
      ', gitea.ref)
    runs-on: k8s-1.27
    env:
      KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG }}
      REPO_NAME: ${{ gitea.event.repository.name }}
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      # Using unique hash to trigger image pull.
      IMAGE_TAG: ${{ gitea.sha }}
      BASIC_AUTH_HTPASSWD: ${{ secrets.BASIC_AUTH_HTPASSWD }}
    steps:
      - name: Write config
        run: mkdir ~/.kube && echo "$KUBECONFIG_CONTENT" > ~/.kube/config

      # Node package is required to run the checkout action.
      - name: Install Node
        run: apk add --no-cache nodejs

      - name: Check out the source code
        uses: actions/checkout@v4

      - name: Set up environment variables
        run: |
          # Replace '/' with '-'.
          echo REF_SAFE_NAME=${GITHUB_REF_NAME////-} >> $GITHUB_ENV;
          echo DOMAIN=${GITHUB_SERVER_URL#*://} >> $GITHUB_ENV;          

      - name: Create namespace
        # Ignore if it already exists.
        run: kubectl create namespace "$REPO_NAME-$REF_SAFE_NAME" || true

      - name: Create docker registry secret
        # Ignore if secret is already present.
        run: |
          kubectl create secret docker-registry container-registry \
            --namespace="$REPO_NAME-$REF_SAFE_NAME" \
            --docker-server="$DOMAIN" \
            --docker-username="$REGISTRY_USERNAME" \
            --docker-password="$REGISTRY_PASSWORD" || true          

      - name: Create basic auth secret
        if: ${{ vars.BASIC_AUTH_ENABLED == 'true' }}
        # Ignore if secret is already present.
        run: |
          kubectl create secret generic basic-auth \
            --namespace="$REPO_NAME-$REF_SAFE_NAME" \
            --from-literal="auth=$BASIC_AUTH_HTPASSWD" || true

      - name: Create basic auth secret
        if: ${{ vars.BASIC_AUTH_ENABLED == 'true' }}
        # Ignore if secret is already present.
        run: |
          kubectl create secret generic basic-auth \
            --namespace="$REPO_NAME-$REF_SAFE_NAME" \
            --from-literal="auth=$BASIC_AUTH_HTPASSWD" || true

      - name: Deploy
        working-directory: chart
        # Semicolons are required inside the script!
        run: |
          if [[ $REF_SAFE_NAME == main ]]; then
            url_coinhq_store="https://$REPO_NAME.coinhq.store";
            url_cwap_io="https://cwap.io";
          else
            url_coinhq_store="https://$REPO_NAME-$REF_SAFE_NAME.coinhq.store";
            url_cwap_io="https://$REPO_NAME-$REF_SAFE_NAME-30.cwap.io";
          fi;

          helm upgrade \
            --install \
            --create-namespace --namespace "$REPO_NAME-$REF_SAFE_NAME" \
            --values values.yaml \
            --set image.tag="$IMAGE_TAG" \
            --set service.urls[0]="$url_coinhq_store" \
            --set service.urls[1]="$url_cwap_io" \
            --set ingress.auth.enabled="${{ vars.BASIC_AUTH_ENABLED }}" \
            "$REF_SAFE_NAME" .;
